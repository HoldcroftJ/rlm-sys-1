* rlm-sys-1 test code
*
* Fetch Tim0 value into d0.l, looping tightly
*

    use     <oskdefs.d>
    
    opt -l
    nam ROMTest
    
Edition     equ 1
Typ_Lang    equ (Systm<<8)+Objct
Attr_Rev    equ ((ReEnt+SupStat)<<8)+0
    psect   rom,Typ_Lang,Attr_Rev,Edition,0,Entry

ROM_BASE    equ $f00000
INITIAL_SSP equ $800

TIM0_DATw   equ $a00000
TIM0_CTLb   equ $a00003
TIM0_DIVb   equ $a00005
    
    org ROM_BASE
    
Entry:
    dc.l    INITIAL_SSP
    dc.l    Start
Start:
    move.l  #ISR,$64
    move.l  #ISR,$68
    move.l  #ISR,$6C
    move.l  #ISR,$70
    move.l  #ISR,$74
    move.l  #ISR,$78
    move.l  #ISR,$7C
    
    movea.l  #TIM0_DATw,a0    * Get current timer value
    move.w  (a0),d0
    move.b  #32,TIM0_DIVb
    ori.b   #5,TIM0_CTLb      * enable TIM0 (COUNTEN=1,PEND=0,IRQEN=1)
    move.w  #$2600,sr         * irq mask all below IRQ6
    move.w  #$300,d1
loop:
    move.w  (a0),d0
    cmp.w   d0,d1
    bcc.s   loop
*    move.b  #TIM_CTLb,#TIM_CTLb     * Write to clear IRQ PEND
    move.w  #$2500,sr                * should NOT cause IRQ from TIM0 PEND
    move.w  #0,TIM0_DATw
    bra.s   loop
ISR:
    move.l  #$DEADBEEF,d2
    clr.l   d2
    rte
done:
    bra.s   done
    
    ends

