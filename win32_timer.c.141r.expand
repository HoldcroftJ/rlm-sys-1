
;; Function SetSchedulerRes (SetSchedulerRes)

SetSchedulerRes (uint32_t period_ms)
{
  uint32_t timerRes;
  struct TIMECAPS tc;
  int32_t retVal;
  int32_t D.35110;
  DWORD D.35108;
  MMRESULT D.35105;
  unsigned int D.35104;
  UINT D.35103;
  UINT D.35102;
  UINT D.35101;
  DWORD D.35099;
  MMRESULT D.35096;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  D.35096_3 = timeGetDevCaps (&tc, 8);
  if (D.35096_3 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35099_4 = GetLastError ();
  printf (&"timeGetDevCaps error %d\n"[0], D.35099_4);
  retVal_5 = -1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.35101_6 = tc.wPeriodMin;
  printf (&"tc.wPeriodMin:%u tc.wPeriodMax:%u\n"[0], D.35101_6);
  D.35102_7 = tc.wPeriodMax;
  D.35103_8 = tc.wPeriodMin;
  D.35104_10 = MAX_EXPR <D.35103_8, period_ms_9(D)>;
  timerRes_11 = MIN_EXPR <D.35102_7, D.35104_10>;
  D.35105_12 = timeBeginPeriod (timerRes_11);
  if (D.35105_12 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  D.35108_13 = GetLastError ();
  printf (&"timeBeginPeriod error %d\n"[0], D.35108_13);
  retVal_14 = -1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  printf (&"set scheduler res to %ums.\n"[0], timerRes_11);
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 3 (fallthru) 5 (fallthru) 6 (fallthru)
  # retVal_1 = PHI <retVal_5(3), retVal_14(5), retVal_2(6)>
  D.35110_15 = retVal_1;
  return D.35110_15;
  # SUCC: EXIT

}



Partition map 

Partition 1 (retVal_1 - 1 )
Partition 2 (retVal_2 - 2 )
Partition 3 (D.35096_3 - 3 )
Partition 4 (D.35099_4 - 4 )
Partition 5 (retVal_5 - 5 )
Partition 6 (D.35101_6 - 6 )
Partition 7 (D.35102_7 - 7 )
Partition 8 (D.35103_8 - 8 )
Partition 9 (period_ms_9(D) - 9 )
Partition 10 (D.35104_10 - 10 )
Partition 11 (timerRes_11 - 11 )
Partition 12 (D.35105_12 - 12 )
Partition 13 (D.35108_13 - 13 )
Partition 14 (retVal_14 - 14 )
Partition 15 (D.35110_15 - 15 )


Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (retVal_5 - 5 )
Partition 3 (period_ms_9(D) - 9 )
Partition 4 (retVal_14 - 14 )


Live on entry to BB2 : period_ms_9(D)  

Live on entry to BB3 : 

Live on entry to BB4 : retVal_2  period_ms_9(D)  

Live on entry to BB5 : 

Live on entry to BB6 : retVal_2  

Live on entry to BB7 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) retVal_1 <-> retVal_2
(2147483646) retVal_1 <-> retVal_5
(2147483646) retVal_1 <-> retVal_14

Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (retVal_5 - 5 )
Partition 3 (period_ms_9(D) - 9 )
Partition 4 (retVal_14 - 14 )

Coalesce list: (1)retVal_1 & (2)retVal_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)retVal_1 & (5)retVal_5 [map: 0, 2] : Success -> 0
Coalesce list: (1)retVal_1 & (14)retVal_14 [map: 0, 4] : Success -> 0
Coalesce list: (1)retVal_1 & (2)retVal_1: Already Coalesced.
Coalesce list: (1)retVal_1 & (14)retVal_1: Already Coalesced.
Coalesce list: (1)retVal_1 & (5)retVal_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (retVal_1 - 1 2 5 14 )
Partition 1 (D.35096_3 - 3 )
Partition 2 (D.35099_4 - 4 )
Partition 3 (D.35101_6 - 6 )
Partition 4 (D.35102_7 - 7 )
Partition 5 (D.35103_8 - 8 )
Partition 6 (period_ms_9(D) - 9 )
Partition 7 (D.35104_10 - 10 )
Partition 8 (timerRes_11 - 11 )
Partition 9 (D.35105_12 - 12 )
Partition 10 (D.35108_13 - 13 )
Partition 11 (D.35110_15 - 15 )

SetSchedulerRes (uint32_t period_ms)
{
  uint32_t timerRes;
  struct TIMECAPS tc;
  int32_t retVal;
  int32_t D.35110;
  DWORD D.35108;
  MMRESULT D.35105;
  unsigned int D.35104;
  UINT D.35103;
  UINT D.35102;
  UINT D.35101;
  DWORD D.35099;
  MMRESULT D.35096;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  D.35096_3 = timeGetDevCaps (&tc, 8);
  if (D.35096_3 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35099_4 = GetLastError ();
  printf (&"timeGetDevCaps error %d\n"[0], D.35099_4);
  retVal_5 = -1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.35101_6 = tc.wPeriodMin;
  printf (&"tc.wPeriodMin:%u tc.wPeriodMax:%u\n"[0], D.35101_6);
  D.35102_7 = tc.wPeriodMax;
  D.35103_8 = tc.wPeriodMin;
  D.35104_10 = MAX_EXPR <D.35103_8, period_ms_9(D)>;
  timerRes_11 = MIN_EXPR <D.35102_7, D.35104_10>;
  D.35105_12 = timeBeginPeriod (timerRes_11);
  if (D.35105_12 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  D.35108_13 = GetLastError ();
  printf (&"timeBeginPeriod error %d\n"[0], D.35108_13);
  retVal_14 = -1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  printf (&"set scheduler res to %ums.\n"[0], timerRes_11);
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 3 (fallthru) 5 (fallthru) 6 (fallthru)
  # retVal_1 = PHI <retVal_5(3), retVal_14(5), retVal_2(6)>
  D.35110_15 = retVal_1;
  return D.35110_15;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; retVal_2 = 0;

(insn 5 4 0 win32_timer.c:34 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; D.35096_3 = timeGetDevCaps (&tc, 8);

(insn 6 5 7 win32_timer.c:38 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 8 [0x8])) -1 (nil))

(insn 7 6 8 win32_timer.c:38 (parallel [
            (set (reg:SI 68)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 8 7 9 win32_timer.c:38 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 68)) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -16 [0xfffffff0]))
        (nil)))

(call_insn 9 8 10 win32_timer.c:38 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeGetDevCaps@8") [flags 0x43]  <function_decl 0x7f88b680 timeGetDevCaps>) [0 S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil)
    (nil))

(insn 10 9 11 win32_timer.c:38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 11 10 0 win32_timer.c:38 (set (reg:SI 58 [ D.35096 ])
        (reg:SI 0 ax)) -1 (nil))

;; if (D.35096_3 != 0)

(insn 12 11 13 win32_timer.c:38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ D.35096 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 0 win32_timer.c:38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.35099_4 = GetLastError ();

(call_insn 15 14 16 win32_timer.c:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 16 15 0 win32_timer.c:39 (set (reg:SI 59 [ D.35099 ])
        (reg:SI 0 ax)) -1 (nil))

;; printf (&"timeGetDevCaps error %d\n"[0], D.35099_4);

(insn 17 16 18 win32_timer.c:39 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 59 [ D.35099 ])) -1 (nil))

(insn 18 17 19 win32_timer.c:39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <string_cst 0x7f48e7f0>)) -1 (nil))

(call_insn 19 18 0 win32_timer.c:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; retVal_5 = -1;

(insn 20 19 0 win32_timer.c:40 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 2 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; D.35101_6 = tc.wPeriodMin;

(insn 25 24 0 win32_timer.c:43 (set (reg:SI 60 [ D.35101 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) [0 tc.wPeriodMin+0 S4 A32])) -1 (nil))

;; printf (&"tc.wPeriodMin:%u tc.wPeriodMax:%u\n"[0], D.35101_6);

(insn 26 25 27 win32_timer.c:43 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 60 [ D.35101 ])) -1 (nil))

(insn 27 26 28 win32_timer.c:43 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <string_cst 0x7fda1378>)) -1 (nil))

(call_insn 28 27 0 win32_timer.c:43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; D.35102_7 = tc.wPeriodMax;

(insn 29 28 0 win32_timer.c:44 (set (reg:SI 61 [ D.35102 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) [0 tc.wPeriodMax+0 S4 A32])) -1 (nil))

;; D.35103_8 = tc.wPeriodMin;

(insn 30 29 0 win32_timer.c:44 (set (reg:SI 62 [ D.35103 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) [0 tc.wPeriodMin+0 S4 A32])) -1 (nil))

;; D.35104_10 = MAX_EXPR <D.35103_8, period_ms_9(D)>;

(insn 31 30 32 win32_timer.c:44 (set (reg:SI 69)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 32 31 33 win32_timer.c:44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 62 [ D.35103 ])
            (reg:SI 69))) -1 (nil))

(insn 33 32 0 win32_timer.c:44 (set (reg:SI 63 [ D.35104 ])
        (if_then_else:SI (geu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (reg:SI 62 [ D.35103 ])
            (reg:SI 69))) -1 (nil))

;; timerRes_11 = MIN_EXPR <D.35102_7, D.35104_10>;

(insn 34 33 35 win32_timer.c:44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.35102 ])
            (reg:SI 63 [ D.35104 ]))) -1 (nil))

(insn 35 34 36 win32_timer.c:44 (set (reg:SI 70)
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (reg:SI 61 [ D.35102 ])
            (reg:SI 63 [ D.35104 ]))) -1 (nil))

(insn 36 35 0 win32_timer.c:44 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])
        (reg:SI 70)) -1 (nil))

;; D.35105_12 = timeBeginPeriod (timerRes_11);

(insn 37 36 38 win32_timer.c:45 (set (reg:SI 71)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])) -1 (nil))

(insn 38 37 39 win32_timer.c:45 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 71)) -1 (nil))

(call_insn 39 38 40 win32_timer.c:45 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeBeginPeriod@4") [flags 0x43]  <function_decl 0x7f88b700 timeBeginPeriod>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 40 39 41 win32_timer.c:45 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 41 40 0 win32_timer.c:45 (set (reg:SI 64 [ D.35105 ])
        (reg:SI 0 ax)) -1 (nil))

;; if (D.35105_12 != 0)

(insn 42 41 43 win32_timer.c:45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.35105 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 43 42 0 win32_timer.c:45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; D.35108_13 = GetLastError ();

(call_insn 45 44 46 win32_timer.c:46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 46 45 0 win32_timer.c:46 (set (reg:SI 65 [ D.35108 ])
        (reg:SI 0 ax)) -1 (nil))

;; printf (&"timeBeginPeriod error %d\n"[0], D.35108_13);

(insn 47 46 48 win32_timer.c:46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 65 [ D.35108 ])) -1 (nil))

(insn 48 47 49 win32_timer.c:46 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <string_cst 0x7f48e910>)) -1 (nil))

(call_insn 49 48 0 win32_timer.c:46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; retVal_14 = -1;

(insn 50 49 0 win32_timer.c:47 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 53 52 54 4 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; printf (&"set scheduler res to %ums.\n"[0], timerRes_11);

(insn 55 54 56 win32_timer.c:50 (set (reg:SI 72)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])) -1 (nil))

(insn 56 55 57 win32_timer.c:50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 72)) -1 (nil))

(insn 57 56 58 win32_timer.c:50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <string_cst 0x7fda13b0>)) -1 (nil))

(call_insn 58 57 0 win32_timer.c:50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 59 58 60 3 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; D.35110_15 = retVal_1;

(insn 61 60 0 win32_timer.c:54 (set (reg:SI 66 [ D.35110 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

;; return D.35110_15;

(insn 62 61 63 win32_timer.c:54 (set (reg:SI 67 [ <retval> ])
        (reg:SI 66 [ D.35110 ])) -1 (nil))

(jump_insn 63 62 64 win32_timer.c:54 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 64 63 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 win32_timer.c:34 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 6 5 7 3 win32_timer.c:38 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 8 [0x8])) -1 (nil))

(insn 7 6 8 3 win32_timer.c:38 (parallel [
            (set (reg:SI 68)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 8 7 9 3 win32_timer.c:38 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 68)) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -16 [0xfffffff0]))
        (nil)))

(call_insn 9 8 10 3 win32_timer.c:38 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeGetDevCaps@8") [flags 0x43]  <function_decl 0x7f88b680 timeGetDevCaps>) [0 S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) -1 (nil)
    (nil))

(insn 10 9 11 3 win32_timer.c:38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 11 10 12 3 win32_timer.c:38 (set (reg:SI 58 [ D.35096 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 12 11 13 3 win32_timer.c:38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ D.35096 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 14 3 win32_timer.c:38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) -1 (nil)
 -> 23)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 15 14 16 4 win32_timer.c:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 16 15 17 4 win32_timer.c:39 (set (reg:SI 59 [ D.35099 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 17 16 18 4 win32_timer.c:39 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 59 [ D.35099 ])) -1 (nil))

(insn 18 17 19 4 win32_timer.c:39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <string_cst 0x7f48e7f0>)) -1 (nil))

(call_insn 19 18 20 4 win32_timer.c:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 20 19 21 4 win32_timer.c:40 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

(jump_insn 21 20 22 4 win32_timer.c:40 (set (pc)
        (label_ref 59)) -1 (nil)
 -> 59)
;; End of basic block 4 -> ( 8)

;; Succ edge  8

(barrier 22 21 23)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 23 22 24 5 2 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 win32_timer.c:43 (set (reg:SI 60 [ D.35101 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) [0 tc.wPeriodMin+0 S4 A32])) -1 (nil))

(insn 26 25 27 5 win32_timer.c:43 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 60 [ D.35101 ])) -1 (nil))

(insn 27 26 28 5 win32_timer.c:43 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <string_cst 0x7fda1378>)) -1 (nil))

(call_insn 28 27 29 5 win32_timer.c:43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 29 28 30 5 win32_timer.c:44 (set (reg:SI 61 [ D.35102 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) [0 tc.wPeriodMax+0 S4 A32])) -1 (nil))

(insn 30 29 31 5 win32_timer.c:44 (set (reg:SI 62 [ D.35103 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) [0 tc.wPeriodMin+0 S4 A32])) -1 (nil))

(insn 31 30 32 5 win32_timer.c:44 (set (reg:SI 69)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 32 31 33 5 win32_timer.c:44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 62 [ D.35103 ])
            (reg:SI 69))) -1 (nil))

(insn 33 32 34 5 win32_timer.c:44 (set (reg:SI 63 [ D.35104 ])
        (if_then_else:SI (geu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (reg:SI 62 [ D.35103 ])
            (reg:SI 69))) -1 (nil))

(insn 34 33 35 5 win32_timer.c:44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.35102 ])
            (reg:SI 63 [ D.35104 ]))) -1 (nil))

(insn 35 34 36 5 win32_timer.c:44 (set (reg:SI 70)
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (reg:SI 61 [ D.35102 ])
            (reg:SI 63 [ D.35104 ]))) -1 (nil))

(insn 36 35 37 5 win32_timer.c:44 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])
        (reg:SI 70)) -1 (nil))

(insn 37 36 38 5 win32_timer.c:45 (set (reg:SI 71)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])) -1 (nil))

(insn 38 37 39 5 win32_timer.c:45 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 71)) -1 (nil))

(call_insn 39 38 40 5 win32_timer.c:45 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeBeginPeriod@4") [flags 0x43]  <function_decl 0x7f88b700 timeBeginPeriod>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 40 39 41 5 win32_timer.c:45 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 41 40 42 5 win32_timer.c:45 (set (reg:SI 64 [ D.35105 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 42 41 43 5 win32_timer.c:45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.35105 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 43 42 44 5 win32_timer.c:45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) -1 (nil)
 -> 53)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 45 44 46 6 win32_timer.c:46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 46 45 47 6 win32_timer.c:46 (set (reg:SI 65 [ D.35108 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 47 46 48 6 win32_timer.c:46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 65 [ D.35108 ])) -1 (nil))

(insn 48 47 49 6 win32_timer.c:46 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <string_cst 0x7f48e910>)) -1 (nil))

(call_insn 49 48 50 6 win32_timer.c:46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 50 49 51 6 win32_timer.c:47 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

(jump_insn 51 50 52 6 win32_timer.c:47 (set (pc)
        (label_ref 59)) -1 (nil)
 -> 59)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 52 51 53)

;; Start of basic block ( 5) -> 7
;; Pred edge  5
(code_label 53 52 54 7 4 "" [1 uses])

(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 7 win32_timer.c:50 (set (reg:SI 72)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timerRes+0 S4 A32])) -1 (nil))

(insn 56 55 57 7 win32_timer.c:50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 72)) -1 (nil))

(insn 57 56 58 7 win32_timer.c:50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <string_cst 0x7fda13b0>)) -1 (nil))

(call_insn 58 57 59 7 win32_timer.c:50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 4 6 7) -> 8
;; Pred edge  4
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 59 58 60 8 3 "" [2 uses])

(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 8 win32_timer.c:54 (set (reg:SI 66 [ D.35110 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

(insn 62 61 63 8 win32_timer.c:54 (set (reg:SI 67 [ <retval> ])
        (reg:SI 66 [ D.35110 ])) -1 (nil))

(jump_insn 63 62 64 8 win32_timer.c:54 (set (pc)
        (label_ref 65)) -1 (nil)
 -> 65)
;; End of basic block 8 -> ( 10)

;; Succ edge  10

(barrier 64 63 70)

;; Start of basic block () -> 9
(note 70 64 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 67 70 68 9 win32_timer.c:55 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 68 67 65 9 win32_timer.c:55 (clobber (reg:SI 67 [ <retval> ])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8
;; Pred edge  9 (fallthru)
(code_label 65 68 71 10 1 "" [1 uses])

(note 71 65 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 71 69 10 win32_timer.c:55 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) -1 (nil))

(insn 69 66 0 10 win32_timer.c:55 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 10 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ResetSchedulerRes (ResetSchedulerRes)

ResetSchedulerRes (uint32_t period_ms)
{
  int32_t retVal;
  int32_t D.35094;
  DWORD D.35092;
  MMRESULT D.35089;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  D.35089_4 = timeEndPeriod (period_ms_3(D));
  if (D.35089_4 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35092_5 = GetLastError ();
  printf (&"error resetting schedule res - error %d\n"[0], D.35092_5);
  retVal_6 = -1;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  __builtin_puts (&"reset scheduler res."[0]);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # retVal_1 = PHI <retVal_6(3), retVal_2(4)>
  D.35094_7 = retVal_1;
  return D.35094_7;
  # SUCC: EXIT

}



Partition map 

Partition 1 (retVal_1 - 1 )
Partition 2 (retVal_2 - 2 )
Partition 3 (period_ms_3(D) - 3 )
Partition 4 (D.35089_4 - 4 )
Partition 5 (D.35092_5 - 5 )
Partition 6 (retVal_6 - 6 )
Partition 7 (D.35094_7 - 7 )


Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (period_ms_3(D) - 3 )
Partition 3 (retVal_6 - 6 )


Live on entry to BB2 : period_ms_3(D)  

Live on entry to BB3 : 

Live on entry to BB4 : retVal_2  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) retVal_1 <-> retVal_6
(2147483646) retVal_1 <-> retVal_2

Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (period_ms_3(D) - 3 )
Partition 3 (retVal_6 - 6 )

Coalesce list: (1)retVal_1 & (6)retVal_6 [map: 0, 3] : Success -> 0
Coalesce list: (1)retVal_1 & (2)retVal_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)retVal_1 & (2)retVal_1: Already Coalesced.
Coalesce list: (1)retVal_1 & (6)retVal_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (retVal_1 - 1 2 6 )
Partition 1 (period_ms_3(D) - 3 )
Partition 2 (D.35089_4 - 4 )
Partition 3 (D.35092_5 - 5 )
Partition 4 (D.35094_7 - 7 )

ResetSchedulerRes (uint32_t period_ms)
{
  int32_t retVal;
  int32_t D.35094;
  DWORD D.35092;
  MMRESULT D.35089;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  D.35089_4 = timeEndPeriod (period_ms_3(D));
  if (D.35089_4 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35092_5 = GetLastError ();
  printf (&"error resetting schedule res - error %d\n"[0], D.35092_5);
  retVal_6 = -1;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  __builtin_puts (&"reset scheduler res."[0]);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # retVal_1 = PHI <retVal_6(3), retVal_2(4)>
  D.35094_7 = retVal_1;
  return D.35094_7;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; retVal_2 = 0;

(insn 5 4 0 win32_timer.c:58 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; D.35089_4 = timeEndPeriod (period_ms_3(D));

(insn 6 5 7 win32_timer.c:60 (set (reg:SI 62)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 7 6 8 win32_timer.c:60 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 62)) -1 (nil))

(call_insn 8 7 9 win32_timer.c:60 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeEndPeriod@4") [flags 0x43]  <function_decl 0x7f88b780 timeEndPeriod>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 9 8 10 win32_timer.c:60 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 10 9 0 win32_timer.c:60 (set (reg:SI 58 [ D.35089 ])
        (reg:SI 0 ax)) -1 (nil))

;; if (D.35089_4 != 0)

(insn 11 10 12 win32_timer.c:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ D.35089 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 0 win32_timer.c:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.35092_5 = GetLastError ();

(call_insn 14 13 15 win32_timer.c:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 15 14 0 win32_timer.c:61 (set (reg:SI 59 [ D.35092 ])
        (reg:SI 0 ax)) -1 (nil))

;; printf (&"error resetting schedule res - error %d\n"[0], D.35092_5);

(insn 16 15 17 win32_timer.c:61 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 59 [ D.35092 ])) -1 (nil))

(insn 17 16 18 win32_timer.c:61 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <string_cst 0x7fec5580>)) -1 (nil))

(call_insn 18 17 0 win32_timer.c:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; retVal_6 = -1;

(insn 19 18 0 win32_timer.c:62 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 22 21 23 6 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"reset scheduler res."[0]);

(insn 24 23 25 win32_timer.c:65 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <string_cst 0x7f48eac0>)) -1 (nil))

(call_insn 25 24 0 win32_timer.c:65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 0x7fdf6280 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 26 25 27 7 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; D.35094_7 = retVal_1;

(insn 28 27 0 win32_timer.c:68 (set (reg:SI 60 [ D.35094 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

;; return D.35094_7;

(insn 29 28 30 win32_timer.c:68 (set (reg:SI 61 [ <retval> ])
        (reg:SI 60 [ D.35094 ])) -1 (nil))

(jump_insn 30 29 31 win32_timer.c:68 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 31 30 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 win32_timer.c:58 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 6 5 7 3 win32_timer.c:60 (set (reg:SI 62)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 win32_timer.c:60 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 62)) -1 (nil))

(call_insn 8 7 9 3 win32_timer.c:60 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeEndPeriod@4") [flags 0x43]  <function_decl 0x7f88b780 timeEndPeriod>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 9 8 10 3 win32_timer.c:60 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 10 9 11 3 win32_timer.c:60 (set (reg:SI 58 [ D.35089 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 11 10 12 3 win32_timer.c:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ D.35089 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 13 3 win32_timer.c:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
 -> 22)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 14 13 15 4 win32_timer.c:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 15 14 16 4 win32_timer.c:61 (set (reg:SI 59 [ D.35092 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 16 15 17 4 win32_timer.c:61 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 59 [ D.35092 ])) -1 (nil))

(insn 17 16 18 4 win32_timer.c:61 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <string_cst 0x7fec5580>)) -1 (nil))

(call_insn 18 17 19 4 win32_timer.c:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 19 18 20 4 win32_timer.c:62 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

(jump_insn 20 19 21 4 win32_timer.c:62 (set (pc)
        (label_ref 26)) -1 (nil)
 -> 26)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 21 20 22)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 22 21 23 5 6 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 win32_timer.c:65 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <string_cst 0x7f48eac0>)) -1 (nil))

(call_insn 25 24 26 5 win32_timer.c:65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 0x7fdf6280 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 26 25 27 6 7 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 win32_timer.c:68 (set (reg:SI 60 [ D.35094 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

(insn 29 28 30 6 win32_timer.c:68 (set (reg:SI 61 [ <retval> ])
        (reg:SI 60 [ D.35094 ])) -1 (nil))

(jump_insn 30 29 31 6 win32_timer.c:68 (set (pc)
        (label_ref 32)) -1 (nil)
 -> 32)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 31 30 37)

;; Start of basic block () -> 7
(note 37 31 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 37 35 7 win32_timer.c:69 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 35 34 32 7 win32_timer.c:69 (clobber (reg:SI 61 [ <retval> ])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 32 35 38 8 5 "" [1 uses])

(note 38 32 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 33 38 36 8 win32_timer.c:69 (set (reg/i:SI 0 ax)
        (reg:SI 61 [ <retval> ])) -1 (nil))

(insn 36 33 0 8 win32_timer.c:69 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function installTimerFunc (installTimerFunc)

installTimerFunc (uint32_t period_ms, uint32_t * timer_id, void * cb, uint32_t arg)
{
  int32_t retVal;
  int32_t D.35087;
  struct __FILE * D.35086;
  struct _reent * D.35085;
  DWORD D.35083;
  uint32_t D.35080;
  MMRESULT D.35079;
  void (*<T2d6f>) (UINT, UINT, DWORD, DWORD, DWORD) cb.6;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  cb.6_4 = (void (*<T2d6f>) (UINT, UINT, DWORD, DWORD, DWORD)) cb_3(D);
  D.35079_7 = timeSetEvent (period_ms_5(D), period_ms_5(D), cb.6_4, arg_6(D), 1);
  *timer_id_8(D) = D.35079_7;
  D.35080_9 = *timer_id_8(D);
  if (D.35080_9 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35083_10 = GetLastError ();
  printf (&"error installing timer callback - error %d\n"[0], D.35083_10);
  retVal_11 = -1;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  __builtin_puts (&"installed timer callback."[0]);
  D.35085_12 = __getreent ();
  D.35086_13 = D.35085_12->_stdout;
  fflush (D.35086_13);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # retVal_1 = PHI <retVal_11(3), retVal_2(4)>
  D.35087_14 = retVal_1;
  return D.35087_14;
  # SUCC: EXIT

}



Partition map 

Partition 1 (retVal_1 - 1 )
Partition 2 (retVal_2 - 2 )
Partition 3 (cb_3(D) - 3 )
Partition 4 (cb.6_4 - 4 )
Partition 5 (period_ms_5(D) - 5 )
Partition 6 (arg_6(D) - 6 )
Partition 7 (D.35079_7 - 7 )
Partition 8 (timer_id_8(D) - 8 )
Partition 9 (D.35080_9 - 9 )
Partition 10 (D.35083_10 - 10 )
Partition 11 (retVal_11 - 11 )
Partition 12 (D.35085_12 - 12 )
Partition 13 (D.35086_13 - 13 )
Partition 14 (D.35087_14 - 14 )


Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (cb_3(D) - 3 )
Partition 3 (period_ms_5(D) - 5 )
Partition 4 (arg_6(D) - 6 )
Partition 5 (timer_id_8(D) - 8 )
Partition 6 (retVal_11 - 11 )


Live on entry to BB2 : cb_3(D)  period_ms_5(D)  arg_6(D)  timer_id_8(D)  

Live on entry to BB3 : 

Live on entry to BB4 : retVal_2  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) retVal_1 <-> retVal_11
(2147483646) retVal_1 <-> retVal_2

Partition map 

Partition 0 (retVal_1 - 1 )
Partition 1 (retVal_2 - 2 )
Partition 2 (cb_3(D) - 3 )
Partition 3 (period_ms_5(D) - 5 )
Partition 4 (arg_6(D) - 6 )
Partition 5 (timer_id_8(D) - 8 )
Partition 6 (retVal_11 - 11 )

Coalesce list: (1)retVal_1 & (11)retVal_11 [map: 0, 6] : Success -> 0
Coalesce list: (1)retVal_1 & (2)retVal_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)retVal_1 & (2)retVal_1: Already Coalesced.
Coalesce list: (1)retVal_1 & (11)retVal_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (retVal_1 - 1 2 11 )
Partition 1 (cb_3(D) - 3 )
Partition 2 (cb.6_4 - 4 )
Partition 3 (period_ms_5(D) - 5 )
Partition 4 (arg_6(D) - 6 )
Partition 5 (D.35079_7 - 7 )
Partition 6 (timer_id_8(D) - 8 )
Partition 7 (D.35080_9 - 9 )
Partition 8 (D.35083_10 - 10 )
Partition 9 (D.35085_12 - 12 )
Partition 10 (D.35086_13 - 13 )
Partition 11 (D.35087_14 - 14 )

installTimerFunc (uint32_t period_ms, uint32_t * timer_id, void * cb, uint32_t arg)
{
  int32_t retVal;
  int32_t D.35087;
  struct __FILE * D.35086;
  struct _reent * D.35085;
  DWORD D.35083;
  uint32_t D.35080;
  MMRESULT D.35079;
  void (*<T2d6f>) (UINT, UINT, DWORD, DWORD, DWORD) cb.6;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  retVal_2 = 0;
  cb.6_4 = (void (*<T2d6f>) (UINT, UINT, DWORD, DWORD, DWORD)) cb_3(D);
  D.35079_7 = timeSetEvent (period_ms_5(D), period_ms_5(D), cb.6_4, arg_6(D), 1);
  *timer_id_8(D) = D.35079_7;
  D.35080_9 = *timer_id_8(D);
  if (D.35080_9 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.35083_10 = GetLastError ();
  printf (&"error installing timer callback - error %d\n"[0], D.35083_10);
  retVal_11 = -1;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  __builtin_puts (&"installed timer callback."[0]);
  D.35085_12 = __getreent ();
  D.35086_13 = D.35085_12->_stdout;
  fflush (D.35086_13);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # retVal_1 = PHI <retVal_11(3), retVal_2(4)>
  D.35087_14 = retVal_1;
  return D.35087_14;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; retVal_2 = 0;

(insn 5 4 0 win32_timer.c:72 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; cb.6_4 = (void (*<T2d6f>) (UINT, UINT, DWORD, DWORD, DWORD)) cb_3(D);

(insn 6 5 0 win32_timer.c:74 (set (reg/f:SI 58 [ cb.6 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 cb+0 S4 A32])) -1 (nil))

;; D.35079_7 = timeSetEvent (period_ms_5(D), period_ms_5(D), cb.6_4, arg_6(D), 1);

(insn 7 6 8 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 8 7 9 win32_timer.c:74 (set (reg:SI 66)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 arg+0 S4 A32])) -1 (nil))

(insn 9 8 10 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 66)) -1 (nil))

(insn 10 9 11 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 58 [ cb.6 ])) -1 (nil))

(insn 11 10 12 win32_timer.c:74 (set (reg:SI 67)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 12 11 13 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 67)) -1 (nil))

(insn 13 12 14 win32_timer.c:74 (set (reg:SI 68)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 14 13 15 win32_timer.c:74 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 68)) -1 (nil))

(call_insn 15 14 16 win32_timer.c:74 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeSetEvent@20") [flags 0x43]  <function_decl 0x7f88b580 timeSetEvent>) [0 S1 A8])
                    (const_int 20 [0x14])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
        ]) -1 (nil)
    (nil))

(insn 16 15 17 win32_timer.c:74 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -20 [0xffffffec])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 0 win32_timer.c:74 (set (reg:SI 59 [ D.35079 ])
        (reg:SI 0 ax)) -1 (nil))

;; *timer_id_8(D) = D.35079_7;

(insn 18 17 19 win32_timer.c:74 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 19 18 0 win32_timer.c:74 (set (mem:SI (reg/f:SI 69) [0 S4 A32])
        (reg:SI 59 [ D.35079 ])) -1 (nil))

;; D.35080_9 = *timer_id_8(D);

(insn 20 19 21 win32_timer.c:74 (set (reg/f:SI 70)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 21 20 0 win32_timer.c:74 (set (reg:SI 60 [ D.35080 ])
        (mem:SI (reg/f:SI 70) [0 S4 A32])) -1 (nil))

;; if (D.35080_9 == 0)

(insn 22 21 23 win32_timer.c:74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.35080 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 0 win32_timer.c:74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.35083_10 = GetLastError ();

(call_insn 25 24 26 win32_timer.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 26 25 0 win32_timer.c:78 (set (reg:SI 61 [ D.35083 ])
        (reg:SI 0 ax)) -1 (nil))

;; printf (&"error installing timer callback - error %d\n"[0], D.35083_10);

(insn 27 26 28 win32_timer.c:78 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 61 [ D.35083 ])) -1 (nil))

(insn 28 27 29 win32_timer.c:78 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <string_cst 0x7ff68fb8>)) -1 (nil))

(call_insn 29 28 0 win32_timer.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

;; retVal_11 = -1;

(insn 30 29 0 win32_timer.c:79 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 9 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_puts (&"installed timer callback."[0]);

(insn 35 34 36 win32_timer.c:82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <string_cst 0x7f48ec70>)) -1 (nil))

(call_insn 36 35 0 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 0x7fdf6280 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

;; D.35085_12 = __getreent ();

(call_insn 37 36 38 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__getreent") [flags 0x43]  <function_decl 0x7fe05480 __getreent>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 38 37 0 win32_timer.c:82 (set (reg/f:SI 62 [ D.35085 ])
        (reg:SI 0 ax)) -1 (nil))

;; D.35086_13 = D.35085_12->_stdout;

(insn 39 38 0 win32_timer.c:82 (set (reg/f:SI 63 [ D.35086 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 62 [ D.35085 ])
                (const_int 8 [0x8])) [0 D.35085_12->_stdout+0 S4 A64])) -1 (nil))

;; fflush (D.35086_13);

(insn 40 39 41 win32_timer.c:82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.35086 ])) -1 (nil))

(call_insn 41 40 0 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fflush") [flags 0x43]  <function_decl 0x7fe05c80 fflush>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 42 41 43 10 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; D.35087_14 = retVal_1;

(insn 44 43 0 win32_timer.c:85 (set (reg:SI 64 [ D.35087 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

;; return D.35087_14;

(insn 45 44 46 win32_timer.c:85 (set (reg:SI 65 [ <retval> ])
        (reg:SI 64 [ D.35087 ])) -1 (nil))

(jump_insn 46 45 47 win32_timer.c:85 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 47 46 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 win32_timer.c:72 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 6 5 7 3 win32_timer.c:74 (set (reg/f:SI 58 [ cb.6 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 cb+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 8 7 9 3 win32_timer.c:74 (set (reg:SI 66)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 arg+0 S4 A32])) -1 (nil))

(insn 9 8 10 3 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 66)) -1 (nil))

(insn 10 9 11 3 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 58 [ cb.6 ])) -1 (nil))

(insn 11 10 12 3 win32_timer.c:74 (set (reg:SI 67)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 win32_timer.c:74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 67)) -1 (nil))

(insn 13 12 14 3 win32_timer.c:74 (set (reg:SI 68)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 period_ms+0 S4 A32])) -1 (nil))

(insn 14 13 15 3 win32_timer.c:74 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 68)) -1 (nil))

(call_insn 15 14 16 3 win32_timer.c:74 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeSetEvent@20") [flags 0x43]  <function_decl 0x7f88b580 timeSetEvent>) [0 S1 A8])
                    (const_int 20 [0x14])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
        ]) -1 (nil)
    (nil))

(insn 16 15 17 3 win32_timer.c:74 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -20 [0xffffffec])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 3 win32_timer.c:74 (set (reg:SI 59 [ D.35079 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 18 17 19 3 win32_timer.c:74 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 19 18 20 3 win32_timer.c:74 (set (mem:SI (reg/f:SI 69) [0 S4 A32])
        (reg:SI 59 [ D.35079 ])) -1 (nil))

(insn 20 19 21 3 win32_timer.c:74 (set (reg/f:SI 70)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 21 20 22 3 win32_timer.c:74 (set (reg:SI 60 [ D.35080 ])
        (mem:SI (reg/f:SI 70) [0 S4 A32])) -1 (nil))

(insn 22 21 23 3 win32_timer.c:74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.35080 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 3 win32_timer.c:74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (nil)
 -> 33)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 25 24 26 4 win32_timer.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("GetLastError@0") [flags 0x43]  <function_decl 0x7fbe6080 GetLastError>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 26 25 27 4 win32_timer.c:78 (set (reg:SI 61 [ D.35083 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 27 26 28 4 win32_timer.c:78 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 61 [ D.35083 ])) -1 (nil))

(insn 28 27 29 4 win32_timer.c:78 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <string_cst 0x7ff68fb8>)) -1 (nil))

(call_insn 29 28 30 4 win32_timer.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 0x7fdf5f00 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 30 29 31 4 win32_timer.c:79 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])
        (const_int -1 [0xffffffff])) -1 (nil))

(jump_insn 31 30 32 4 win32_timer.c:79 (set (pc)
        (label_ref 42)) -1 (nil)
 -> 42)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 32 31 33)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 33 32 34 5 9 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 win32_timer.c:82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <string_cst 0x7f48ec70>)) -1 (nil))

(call_insn 36 35 37 5 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 0x7fdf6280 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(call_insn 37 36 38 5 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__getreent") [flags 0x43]  <function_decl 0x7fe05480 __getreent>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 38 37 39 5 win32_timer.c:82 (set (reg/f:SI 62 [ D.35085 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 39 38 40 5 win32_timer.c:82 (set (reg/f:SI 63 [ D.35086 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 62 [ D.35085 ])
                (const_int 8 [0x8])) [0 D.35085_12->_stdout+0 S4 A64])) -1 (nil))

(insn 40 39 41 5 win32_timer.c:82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.35086 ])) -1 (nil))

(call_insn 41 40 42 5 win32_timer.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fflush") [flags 0x43]  <function_decl 0x7fe05c80 fflush>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 42 41 43 6 10 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 win32_timer.c:85 (set (reg:SI 64 [ D.35087 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 retVal+0 S4 A32])) -1 (nil))

(insn 45 44 46 6 win32_timer.c:85 (set (reg:SI 65 [ <retval> ])
        (reg:SI 64 [ D.35087 ])) -1 (nil))

(jump_insn 46 45 47 6 win32_timer.c:85 (set (pc)
        (label_ref 48)) -1 (nil)
 -> 48)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 47 46 53)

;; Start of basic block () -> 7
(note 53 47 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 53 51 7 win32_timer.c:86 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 51 50 48 7 win32_timer.c:86 (clobber (reg:SI 65 [ <retval> ])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 48 51 54 8 8 "" [1 uses])

(note 54 48 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 54 52 8 win32_timer.c:86 (set (reg/i:SI 0 ax)
        (reg:SI 65 [ <retval> ])) -1 (nil))

(insn 52 49 0 8 win32_timer.c:86 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function uninstallTimerFunc (uninstallTimerFunc)

uninstallTimerFunc (uint32_t timer_id)
{
  MMRESULT D.35076;
  int32_t D.35075;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.35076_2 = timeKillEvent (timer_id_1(D));
  D.35075_3 = (int32_t) D.35076_2;
  return D.35075_3;
  # SUCC: EXIT

}



Partition map 

Partition 1 (timer_id_1(D) - 1 )
Partition 2 (D.35076_2 - 2 )
Partition 3 (D.35075_3 - 3 )


Partition map 

Partition 0 (timer_id_1(D) - 1 )


Live on entry to BB2 : timer_id_1(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (timer_id_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (timer_id_1(D) - 1 )
Partition 1 (D.35076_2 - 2 )
Partition 2 (D.35075_3 - 3 )

uninstallTimerFunc (uint32_t timer_id)
{
  MMRESULT D.35076;
  int32_t D.35075;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.35076_2 = timeKillEvent (timer_id_1(D));
  D.35075_3 = (int32_t) D.35076_2;
  return D.35075_3;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; D.35076_2 = timeKillEvent (timer_id_1(D));

(insn 5 4 6 win32_timer.c:89 (set (reg:SI 61)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 6 5 7 win32_timer.c:89 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 61)) -1 (nil))

(call_insn 7 6 8 win32_timer.c:89 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeKillEvent@4") [flags 0x43]  <function_decl 0x7f88b600 timeKillEvent>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 8 7 9 win32_timer.c:89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 9 8 0 win32_timer.c:89 (set (reg:SI 58 [ D.35076 ])
        (reg:SI 0 ax)) -1 (nil))

;; D.35075_3 = (int32_t) D.35076_2;

(insn 10 9 0 win32_timer.c:89 (set (reg:SI 59 [ D.35075 ])
        (reg:SI 58 [ D.35076 ])) -1 (nil))

;; return D.35075_3;

(insn 11 10 12 win32_timer.c:89 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.35075 ])) -1 (nil))

(jump_insn 12 11 13 win32_timer.c:89 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 13 12 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 win32_timer.c:89 (set (reg:SI 61)
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 timer_id+0 S4 A32])) -1 (nil))

(insn 6 5 7 3 win32_timer.c:89 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 61)) -1 (nil))

(call_insn 7 6 8 3 win32_timer.c:89 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("timeKillEvent@4") [flags 0x43]  <function_decl 0x7f88b600 timeKillEvent>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) -1 (nil)
    (nil))

(insn 8 7 9 3 win32_timer.c:89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 9 8 10 3 win32_timer.c:89 (set (reg:SI 58 [ D.35076 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 10 9 11 3 win32_timer.c:89 (set (reg:SI 59 [ D.35075 ])
        (reg:SI 58 [ D.35076 ])) -1 (nil))

(insn 11 10 12 3 win32_timer.c:89 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.35075 ])) -1 (nil))

(jump_insn 12 11 13 3 win32_timer.c:89 (set (pc)
        (label_ref 14)) -1 (nil)
 -> 14)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 13 12 19)

;; Start of basic block () -> 4
(note 19 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 19 17 4 win32_timer.c:90 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 17 16 14 4 win32_timer.c:90 (clobber (reg:SI 60 [ <retval> ])) -1 (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 14 17 20 5 11 "" [1 uses])

(note 20 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 20 18 5 win32_timer.c:90 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) -1 (nil))

(insn 18 15 0 5 win32_timer.c:90 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function testCallback (testCallback)

testCallback (uint32_t timerID, uint32_t msg, uint32_t inc, uint32_t resvd1, uint32_t resvd2)
{
  volatile uint32_t counter.5;
  unsigned int counter.4;
  volatile uint32_t counter.3;
  unsigned int iftmp.2;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (inc_2(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.2_3 = inc_2(D);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  iftmp.2_4 = 1;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # iftmp.2_1 = PHI <iftmp.2_3(3), iftmp.2_4(4)>
  counter.3_5 ={v} counter;
  counter.4_6 = iftmp.2_1 + counter.3_5;
  counter ={v} counter.4_6;
  counter.5_7 ={v} counter;
  if (counter.5_7 > 99)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  exitFlag ={v} 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (false) 6 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (iftmp.2_1 - 1 )
Partition 2 (inc_2(D) - 2 )
Partition 3 (iftmp.2_3 - 3 )
Partition 4 (iftmp.2_4 - 4 )
Partition 5 (counter.3_5 - 5 )
Partition 6 (counter.4_6 - 6 )
Partition 7 (counter.5_7 - 7 )


Partition map 

Partition 0 (iftmp.2_1 - 1 )
Partition 1 (inc_2(D) - 2 )
Partition 2 (iftmp.2_3 - 3 )
Partition 3 (iftmp.2_4 - 4 )


Live on entry to BB2 : inc_2(D)  

Live on entry to BB3 : inc_2(D)  

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (iftmp.2_1 - 1 )
Partition 1 (inc_2(D) - 2 )
Partition 2 (iftmp.2_3 - 3 )
Partition 3 (iftmp.2_4 - 4 )

Coalesce list: (1)iftmp.2_1 & (4)iftmp.2_4 [map: 0, 3] : Success -> 0
Coalesce list: (1)iftmp.2_1 & (3)iftmp.2_3 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.2_1 - 1 3 4 )
Partition 1 (inc_2(D) - 2 )
Partition 2 (counter.3_5 - 5 )
Partition 3 (counter.4_6 - 6 )
Partition 4 (counter.5_7 - 7 )

testCallback (uint32_t timerID, uint32_t msg, uint32_t inc, uint32_t resvd1, uint32_t resvd2)
{
  volatile uint32_t counter.5;
  unsigned int counter.4;
  volatile uint32_t counter.3;
  unsigned int iftmp.2;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (inc_2(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.2_3 = inc_2(D);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  iftmp.2_4 = 1;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # iftmp.2_1 = PHI <iftmp.2_3(3), iftmp.2_4(4)>
  counter.3_5 ={v} counter;
  counter.4_6 = iftmp.2_1 + counter.3_5;
  counter ={v} counter.4_6;
  counter.5_7 ={v} counter;
  if (counter.5_7 > 99)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  exitFlag ={v} 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (false) 6 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; if (inc_2(D) != 0)

(insn 5 4 6 win32_timer.c:97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 inc+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 6 5 0 win32_timer.c:97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; iftmp.2_3 = inc_2(D);

(insn 8 7 0 win32_timer.c:97 (set (reg:SI 58 [ iftmp.2 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 inc+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 13 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.2_4 = 1;

(insn 13 12 0 win32_timer.c:97 (set (reg:SI 58 [ iftmp.2 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 14 13 15 14 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; counter.3_5 ={v} counter;

(insn 16 15 0 win32_timer.c:97 (set (reg:SI 59 [ counter.3 ])
        (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])) -1 (nil))

;; counter.4_6 = iftmp.2_1 + counter.3_5;

(insn 17 16 0 win32_timer.c:97 (parallel [
            (set (reg:SI 60 [ counter.4 ])
                (plus:SI (reg:SI 58 [ iftmp.2 ])
                    (reg:SI 59 [ counter.3 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; counter ={v} counter.4_6;

(insn 18 17 0 win32_timer.c:97 (set (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])
        (reg:SI 60 [ counter.4 ])) -1 (nil))

;; counter.5_7 ={v} counter;

(insn 19 18 0 win32_timer.c:99 (set (reg:SI 61 [ counter.5 ])
        (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])) -1 (nil))

;; if (counter.5_7 > 99)

(insn 20 19 21 win32_timer.c:99 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ counter.5 ])
            (const_int 99 [0x63]))) -1 (nil))

(jump_insn 21 20 0 win32_timer.c:99 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; exitFlag ={v} 1;

(insn 23 22 0 win32_timer.c:100 (set (mem/v/c/i:SI (symbol_ref:SI ("exitFlag") [flags 0x2]  <var_decl 0x7f373a20 exitFlag>) [0 exitFlag+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 24 23 25 15 "" [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 win32_timer.c:97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 inc+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 6 5 7 3 win32_timer.c:97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) -1 (nil)
 -> 11)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 4 win32_timer.c:97 (set (reg:SI 58 [ iftmp.2 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 inc+0 S4 A32])) -1 (nil))

(jump_insn 9 8 10 4 win32_timer.c:97 (set (pc)
        (label_ref 14)) -1 (nil)
 -> 14)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 10 9 11)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 11 10 12 5 13 "" [1 uses])

(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 win32_timer.c:97 (set (reg:SI 58 [ iftmp.2 ])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 14 13 15 6 14 "" [1 uses])

(note 15 14 16 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 6 win32_timer.c:97 (set (reg:SI 59 [ counter.3 ])
        (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])) -1 (nil))

(insn 17 16 18 6 win32_timer.c:97 (parallel [
            (set (reg:SI 60 [ counter.4 ])
                (plus:SI (reg:SI 58 [ iftmp.2 ])
                    (reg:SI 59 [ counter.3 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 18 17 19 6 win32_timer.c:97 (set (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])
        (reg:SI 60 [ counter.4 ])) -1 (nil))

(insn 19 18 20 6 win32_timer.c:99 (set (reg:SI 61 [ counter.5 ])
        (mem/v/c/i:SI (symbol_ref:SI ("counter") [flags 0x2]  <var_decl 0x7f373900 counter>) [0 counter+0 S4 A32])) -1 (nil))

(insn 20 19 21 6 win32_timer.c:99 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ counter.5 ])
            (const_int 99 [0x63]))) -1 (nil))

(jump_insn 21 20 22 6 win32_timer.c:99 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) -1 (nil)
 -> 24)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 7 win32_timer.c:100 (set (mem/v/c/i:SI (symbol_ref:SI ("exitFlag") [flags 0x2]  <var_decl 0x7f373a20 exitFlag>) [0 exitFlag+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 24 23 25 8 15 "" [1 uses])

(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(code_label 26 25 27 9 12 "" [0 uses])

(note 27 26 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function main (main)

main (int argc, char * * argv)
{
  uint32_t timer_id;
  int32_t status;
  int D.35064;
  volatile int32_t exitFlag.1;
  int32_t iftmp.0;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  timer_id = 0;
  status_2 = SetSchedulerRes (1000);
  if (status_2 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.0_3 = installTimerFunc (1000, &timer_id, testCallback, 2);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  iftmp.0_4 = status_2;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # iftmp.0_1 = PHI <iftmp.0_3(3), iftmp.0_4(4)>
  status_5 = iftmp.0_1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 7 (true)
  sleep (1);
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  exitFlag.1_6 ={v} exitFlag;
  if (exitFlag.1_6 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.35064_7 = status_5;
  return D.35064_7;
  # SUCC: EXIT

}



Partition map 

Partition 1 (iftmp.0_1 - 1 )
Partition 2 (status_2 - 2 )
Partition 3 (iftmp.0_3 - 3 )
Partition 4 (iftmp.0_4 - 4 )
Partition 5 (status_5 - 5 )
Partition 6 (exitFlag.1_6 - 6 )
Partition 7 (D.35064_7 - 7 )


Partition map 

Partition 0 (iftmp.0_1 - 1 )
Partition 1 (status_2 - 2 )
Partition 2 (iftmp.0_3 - 3 )
Partition 3 (iftmp.0_4 - 4 )
Partition 4 (status_5 - 5 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : status_2  

Live on entry to BB5 : 

Live on entry to BB6 : status_5  

Live on entry to BB7 : status_5  

Live on entry to BB8 : status_5  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) status_2 <-> status_5

Partition map 

Partition 0 (iftmp.0_1 - 1 )
Partition 1 (status_2 - 2 )
Partition 2 (iftmp.0_3 - 3 )
Partition 3 (iftmp.0_4 - 4 )
Partition 4 (status_5 - 5 )

Coalesce list: (2)status_2 & (5)status_5 [map: 1, 4] : Success -> 1
Coalesce list: (1)iftmp.0_1 & (4)iftmp.0_4 [map: 0, 3] : Success -> 0
Coalesce list: (1)iftmp.0_1 & (3)iftmp.0_3 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (iftmp.0_1 - 1 3 4 )
Partition 1 (status_2 - 2 5 )
Partition 2 (exitFlag.1_6 - 6 )
Partition 3 (D.35064_7 - 7 )

main (int argc, char * * argv)
{
  uint32_t timer_id;
  int32_t status;
  int D.35064;
  volatile int32_t exitFlag.1;
  int32_t iftmp.0;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  timer_id = 0;
  status_2 = SetSchedulerRes (1000);
  if (status_2 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  iftmp.0_3 = installTimerFunc (1000, &timer_id, testCallback, 2);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  iftmp.0_4 = status_2;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # iftmp.0_1 = PHI <iftmp.0_3(3), iftmp.0_4(4)>
  status_5 = iftmp.0_1;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 7 (true)
  sleep (1);
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  exitFlag.1_6 ={v} exitFlag;
  if (exitFlag.1_6 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.35064_7 = status_5;
  return D.35064_7;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; timer_id = 0;

(insn 6 5 0 win32_timer.c:108 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timer_id+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; status_2 = SetSchedulerRes (1000);

(insn 7 6 8 win32_timer.c:110 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1000 [0x3e8])) -1 (nil))

(call_insn 8 7 9 win32_timer.c:110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SetSchedulerRes") [flags 0x3]  <function_decl 0x7f322980 SetSchedulerRes>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(insn 9 8 10 win32_timer.c:110 (set (reg:SI 62)
        (reg:SI 0 ax)) -1 (nil))

(insn 10 9 0 win32_timer.c:110 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
        (reg:SI 62)) -1 (nil))

;; if (status_2 == 0)

(insn 11 10 12 win32_timer.c:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 0 win32_timer.c:111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; iftmp.0_3 = installTimerFunc (1000, &timer_id, testCallback, 2);

(insn 14 13 15 win32_timer.c:111 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (const_int 2 [0x2])) -1 (nil))

(insn 15 14 16 win32_timer.c:111 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (symbol_ref:SI ("testCallback") [flags 0x3]  <function_decl 0x7f322b80 testCallback>)) -1 (nil))

(insn 16 15 17 win32_timer.c:111 (parallel [
            (set (reg:SI 63)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 win32_timer.c:111 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 63)) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffff8]))
        (nil)))

(insn 18 17 19 win32_timer.c:111 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1000 [0x3e8])) -1 (nil))

(call_insn 19 18 20 win32_timer.c:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("installTimerFunc") [flags 0x3]  <function_decl 0x7f322a80 installTimerFunc>) [0 S1 A8])
            (const_int 16 [0x10]))) -1 (nil)
    (nil))

(insn 20 19 0 win32_timer.c:111 (set (reg:SI 58 [ iftmp.0 ])
        (reg:SI 0 ax)) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 17 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.0_4 = status_2;

(insn 25 24 0 win32_timer.c:111 (set (reg:SI 58 [ iftmp.0 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 26 25 27 18 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; status_5 = iftmp.0_1;

(insn 28 27 0 win32_timer.c:111 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
        (reg:SI 58 [ iftmp.0 ])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; sleep (1);

(insn 32 31 33 win32_timer.c:113 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(call_insn 33 32 0 win32_timer.c:113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sleep") [flags 0x43]  <function_decl 0x7f322c80 sleep>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 34 33 35 19 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; exitFlag.1_6 ={v} exitFlag;

(insn 36 35 0 win32_timer.c:113 (set (reg:SI 59 [ exitFlag.1 ])
        (mem/v/c/i:SI (symbol_ref:SI ("exitFlag") [flags 0x2]  <var_decl 0x7f373a20 exitFlag>) [0 exitFlag+0 S4 A32])) -1 (nil))

;; if (exitFlag.1_6 == 0)

(insn 38 36 39 win32_timer.c:113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ exitFlag.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 0 win32_timer.c:113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; D.35064_7 = status_5;

(insn 41 40 0 win32_timer.c:118 (set (reg:SI 60 [ D.35064 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])) -1 (nil))

;; return D.35064_7;

(insn 42 41 43 win32_timer.c:118 (set (reg:SI 61 [ <retval> ])
        (reg:SI 60 [ D.35064 ])) -1 (nil))

(jump_insn 43 42 44 win32_timer.c:118 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 44 43 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 3 2 5 2 win32_timer.c:106 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x43]) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 win32_timer.c:108 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 timer_id+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 7 6 8 3 win32_timer.c:110 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1000 [0x3e8])) -1 (nil))

(call_insn 8 7 9 3 win32_timer.c:110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SetSchedulerRes") [flags 0x3]  <function_decl 0x7f322980 SetSchedulerRes>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(insn 9 8 10 3 win32_timer.c:110 (set (reg:SI 62)
        (reg:SI 0 ax)) -1 (nil))

(insn 10 9 11 3 win32_timer.c:110 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
        (reg:SI 62)) -1 (nil))

(insn 11 10 12 3 win32_timer.c:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 13 3 win32_timer.c:111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) -1 (nil)
 -> 23)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 win32_timer.c:111 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (const_int 2 [0x2])) -1 (nil))

(insn 15 14 16 4 win32_timer.c:111 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (symbol_ref:SI ("testCallback") [flags 0x3]  <function_decl 0x7f322b80 testCallback>)) -1 (nil))

(insn 16 15 17 4 win32_timer.c:111 (parallel [
            (set (reg:SI 63)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 4 win32_timer.c:111 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 63)) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffff8]))
        (nil)))

(insn 18 17 19 4 win32_timer.c:111 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1000 [0x3e8])) -1 (nil))

(call_insn 19 18 20 4 win32_timer.c:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("installTimerFunc") [flags 0x3]  <function_decl 0x7f322a80 installTimerFunc>) [0 S1 A8])
            (const_int 16 [0x10]))) -1 (nil)
    (nil))

(insn 20 19 21 4 win32_timer.c:111 (set (reg:SI 58 [ iftmp.0 ])
        (reg:SI 0 ax)) -1 (nil))

(jump_insn 21 20 22 4 win32_timer.c:111 (set (pc)
        (label_ref 26)) -1 (nil)
 -> 26)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 22 21 23)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 23 22 24 5 17 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 win32_timer.c:111 (set (reg:SI 58 [ iftmp.0 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 26 25 27 6 18 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 win32_timer.c:111 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])
        (reg:SI 58 [ iftmp.0 ])) -1 (nil))

(jump_insn 29 28 30 6 win32_timer.c:113 (set (pc)
        (label_ref 34)) -1 (nil)
 -> 34)
;; End of basic block 6 -> ( 8)

;; Succ edge  8

(barrier 30 29 37)

;; Start of basic block ( 8) -> 7
;; Pred edge  8
(code_label 37 30 31 7 20 "" [1 uses])

(note 31 37 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 win32_timer.c:113 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(call_insn 33 32 34 7 win32_timer.c:113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sleep") [flags 0x43]  <function_decl 0x7f322c80 sleep>) [0 S1 A8])
            (const_int 4 [0x4]))) -1 (nil)
    (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 34 33 35 8 19 "" [1 uses])

(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 38 8 win32_timer.c:113 (set (reg:SI 59 [ exitFlag.1 ])
        (mem/v/c/i:SI (symbol_ref:SI ("exitFlag") [flags 0x2]  <var_decl 0x7f373a20 exitFlag>) [0 exitFlag+0 S4 A32])) -1 (nil))

(insn 38 36 39 8 win32_timer.c:113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ exitFlag.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 40 8 win32_timer.c:113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) -1 (nil)
 -> 37)
;; End of basic block 8 -> ( 7 9)

;; Succ edge  7
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 9 win32_timer.c:118 (set (reg:SI 60 [ D.35064 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 status+0 S4 A32])) -1 (nil))

(insn 42 41 43 9 win32_timer.c:118 (set (reg:SI 61 [ <retval> ])
        (reg:SI 60 [ D.35064 ])) -1 (nil))

(jump_insn 43 42 44 9 win32_timer.c:118 (set (pc)
        (label_ref 45)) -1 (nil)
 -> 45)
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 44 43 50)

;; Start of basic block () -> 10
(note 50 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 50 48 10 win32_timer.c:119 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 48 47 45 10 win32_timer.c:119 (clobber (reg:SI 61 [ <retval> ])) -1 (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 45 48 51 11 16 "" [1 uses])

(note 51 45 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 46 51 49 11 win32_timer.c:119 (set (reg/i:SI 0 ax)
        (reg:SI 61 [ <retval> ])) -1 (nil))

(insn 49 46 0 11 win32_timer.c:119 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

